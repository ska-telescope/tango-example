{{ if .Values.tangoexample.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "tango-configuration-json-{{ template "tango-example.name" . }}-{{ .Release.Name }}"
  namespace: {{ .Release.Namespace }}
data: 
  configuration.json: 
{{ (tpl (.Files.Glob "data/configuration.json").AsConfig . ) | indent 2  }}

---
apiVersion: v1
kind: Pod
metadata:
  name: tango-example-{{ template "tango-example.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: tango-example-{{ template "tango-example.name" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ template "tango-example.chart" . }}"
spec:
  {{- if .Values.pullSecrets }}
  imagePullSecrets:
  {{- range .Values.pullSecrets }}
    - name: {{ . }}
  {{- end}}
  {{- end }}
  volumes:
    - name: configuration
      configMap:
        name: "tango-configuration-json-{{ template "tango-example.name" . }}-{{ .Release.Name }}"
  
  initContainers:
  - name: dsconfig
    image: "{{ .Values.dsconfig.image.registry }}/{{ .Values.dsconfig.image.image }}:{{ .Values.dsconfig.image.tag }}"
    imagePullPolicy: {{ .Values.dsconfig.image.pullPolicy }}
    command:
    - /usr/local/bin/wait-for-it.sh
    - databaseds-tango-base-{{ .Release.Name }}:10000
    - --timeout=30
    - --strict
    - --
    - json2tango -w -a -u data/configuration.json
    env:
    - name: TANGO_HOST
      value: databaseds-tango-base-{{ .Release.Name }}:10000
    volumeMounts:
    - name: configuration
      mountPath: data
      readOnly: true

  containers:
  - name: powersupply
    image: "{{ .Values.tangoexample.image.registry }}/{{ .Values.tangoexample.image.image }}:{{ .Values.tangoexample.image.tag }}"
    imagePullPolicy: {{ .Values.tangoexample.image.pullPolicy }}
    command:
      - sh
    args:
      - -c
      - "/venv/bin/python /app/powersupply/powersupply.py test"
    env:
    - name: TANGO_HOST
      value: databaseds-tango-base-{{ .Release.Name }}:10000

  - name: motor
    image: "{{ .Values.tangoexample.image.registry }}/{{ .Values.tangoexample.image.image }}:{{ .Values.tangoexample.image.tag }}"
    imagePullPolicy: {{ .Values.tangoexample.image.pullPolicy }}
    command:
      - sh
    args:
      - -c
      - "/venv/bin/python /app/Motor/Motor.py test"
    env:
    - name: TANGO_HOST
      value: databaseds-tango-base-{{ .Release.Name }}:10000

  - name: webjivetestdevice
    image: "{{ .Values.tangoexample.image.registry }}/{{ .Values.tangoexample.image.image }}:{{ .Values.tangoexample.image.tag }}"
    imagePullPolicy: {{ .Values.tangoexample.image.pullPolicy }}
    command:
      - sh
    args:
      - -c
      - "/venv/bin/python /app/WebjiveTestDevice/WebjiveTestDevice.py test"
    env:
      - name: TANGO_HOST
        value: databaseds-tango-base-{{ .Release.Name }}:10000

  - name: eventreceiver
    image: "{{ .Values.tangoexample.image.registry }}/{{ .Values.tangoexample.image.image }}:{{ .Values.tangoexample.image.tag }}"
    imagePullPolicy: {{ .Values.tangoexample.image.pullPolicy }}
    command:
      - sh
    args:
      - -c
      - "/venv/bin/python /app/EventReceiver/EventReceiver.py test"
    env:
    - name: TANGO_HOST
      value: databaseds-tango-base-{{ .Release.Name }}:10000
{{- with .Values.tangoexample.env }}
{{ toYaml . | indent 4 }}
{{- end }}
  restartPolicy: Always
{{- with .Values.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}

{{ end }}
