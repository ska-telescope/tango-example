#
# Docker compose file for TANGO database and database device server
#
# Defines:
#   - tangodb: MariaDB database with TANGO schema
#   - databaseds: TANGO database device server
#
# Requires:
#   - None
#
version: '2'
volumes:
  tangodb: {}

services:
  powersupply:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}powersupply
    depends_on:
      - dsconfig
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/powersupply.py test"
    restart: on-failure

  motor:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}motor
    depends_on:
      - dsconfig
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/Motor.py test"
    restart: on-failure

  webjivetestdevice:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}webjivetestdevice
    depends_on:
      - dsconfig
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/WebjiveTestDevice.py test"
    restart: on-failure

  eventreceiver:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}eventreceiver
    depends_on:
      - dsconfig
      - motor
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/EventReceiver.py test"
    restart: on-failure

  calendarclock:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}calendarclock
    environment:
      - TANGO_HOST=${TANGO_HOST}
    depends_on:
      - dsconfig
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
              /venv/bin/python /app/module_example/CalendarClock.py test"
    restart: on-failure
