#
# Docker compose file for TANGO database and database device server
#
# Defines:
#   - tangodb: MariaDB database with TANGO schema
#   - databaseds: TANGO database device server
#
# Requires:
#   - None
#
version: '2'
volumes:
  tangodb: {}

services:
  tangodb:
    image: nexus.engageska-portugal.pt/ska-docker/tango-db:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}tangodb
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
    restart: on-failure

  databaseds:
    image: nexus.engageska-portugal.pt/ska-docker/tango-cpp:latest
    depends_on:
      - tangodb
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}databaseds
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
      - TANGO_HOST=${TANGO_HOST}
    entrypoint:
      - /usr/local/bin/wait-for-it.sh
      - ${MYSQL_HOST}
      - --timeout=30
      - --strict
      - --
      - /usr/local/bin/DataBaseds
      - "2"
      - -ORBendPoint
      - giop:tcp::10000
    restart: on-failure

  dsconfig:
    image: nexus.engageska-portugal.pt/ska-docker/tango-dsconfig:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}dsconfig
    depends_on:
      - databaseds
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             json2tango -w -a -u /tango-example/charts/tango-example/data/configuration.json  &&
             sleep infinity"
    volumes:
      - .:/tango-example
    restart: on-failure

  dsconfigdump:
    image: nexus.engageska-portugal.pt/ska-docker/tango-dsconfig:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}dsconfigdump
    depends_on:
      - databaseds
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             python -m dsconfig.dump && sleep infinity"
    volumes:
      - .:/tango-example
    restart: on-failure

  powersupply:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}powersupply
    depends_on:
      - dsconfig
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/powersupply.py test"
    restart: on-failure

  motor:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}motor
    depends_on:
      - dsconfig
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/Motor.py test"
    restart: on-failure

  webjivetestdevice:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}webjivetestdevice
    depends_on:
      - dsconfig
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/WebjiveTestDevice.py test"
    restart: on-failure

  eventreceiver:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/tango-example:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}eventreceiver
    depends_on:
      - dsconfig
      - motor
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /venv/bin/python /app/module_example/EventReceiver.py test"
    restart: on-failure
