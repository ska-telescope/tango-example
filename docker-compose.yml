#
# Docker compose file for TANGO database and database device server
#
# Defines:
#   - tangodb: MariaDB database with TANGO schema
#   - databaseds: TANGO database device server
#
# Requires:
#   - None
#
version: '2'
volumes:
  tangodb: {}

services:
  tangodb:
    image: ska-registry.av.it.pt/ska-docker/tango-db:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}tangodb
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
    volumes:
      - tangodb:/var/lib/mysql

  databaseds:
    image: ska-registry.av.it.pt/ska-docker/tango-cpp:latest
    depends_on:
      - tangodb
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}databaseds
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
      - TANGO_HOST=${TANGO_HOST}
    entrypoint:
      - /usr/local/bin/wait-for-it.sh
      - ${MYSQL_HOST}
      - --timeout=30
      - --strict
      - --
      - /usr/local/bin/DataBaseds
      - "2"
      - -ORBendPoint
      - giop:tcp::10000

  powersupply:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/training:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}powersupply
    depends_on:
      - databaseds
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --check-device test/power_supply/1 ||\
             tango_admin --add-server PowerSupply/test PowerSupply test/power_supply/1 &&\
             /venv/bin/python /app/powersupply/powersupply.py test"


  motor:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/training:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}motor
    depends_on:
      - powersupply
      - databaseds
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --check-device test/motor/1 ||\
             tango_admin --add-server Motor/test Motor test/motor/1 &&\
             /venv/bin/python /app/Motor/Motor.py test"

  eventreceiver:
    image: ${DOCKER_REGISTRY_HOST}/${DOCKER_REGISTRY_USER}/training:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}eventreceiver
    depends_on:
      - motor
      - powersupply
      - databaseds
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             tango_admin --check-device test/eventreceiver/1 ||\
             tango_admin --add-server EventReceiver/test EventReceiver test/eventreceiver/1 &&\
             /venv/bin/python /app/EventReceiver/EventReceiver.py test"