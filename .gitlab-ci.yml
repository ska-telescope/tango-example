# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest

include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/post_step.yml'


# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
cache:
  paths:
    - build

# before_script is used to define the command that should be run before all jobs, including deploy jobs, but after the restoration of artifacts.
# This can be an array or a multi-line string.
before_script:
  - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - check
  - test
  - pages

test:
  tags:
    - docker-executor
  stage: test
  script:
    - make build
    - make test
    - make push
  artifacts:
    when: always
    paths:
      - build

pages:
  stage: pages
  image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest
  before_script:
  - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  tags:
    - docker-executor
  script:
    - cp -R build public
    - mv public/htmlcov/* public
  artifacts:
    paths:
      - public

    
lint-check-chart:
  tags:
    - docker-executor
  stage: check
  script:
    - make helm_dependencies
    - make lint
  artifacts:
    paths:
      - public
  only:
    variables:
      - $K8S_ENABLED

test-chart:
  tags:
    - docker-executor
  stage: test
  script:
    - make namespace
    - make kubectl_dependencies
    - make helm_dependencies
    - make install HELM_CHART=tango-base
    - make install HELM_CHART=tango-example
    - make helm_tests
    - make k8s_test
    - make helm_delete
    - make delete_namespace
  artifacts:
    paths:
      - public
  only:
    variables:
      - $K8S_ENABLED
