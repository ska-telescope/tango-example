# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
# We store the artefact.skao.int/ska-k8s-tools/docker-builder:x.x.x as a group level variable for convenience
image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
# cache:
#   paths:
#     - build

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.


stages:
  - lint
  - build
  - join-reports
  - test
  - test-stfc-stfc
  - test-stfc-engage
  - test-engage-stfc
  - test-engage-engage
  - pages
  - publish
  - scan

#Join linting reports (This stage is temporary!)
join_linting_reports:
  stage: join-reports
  tags:
    - k8srunner
  script:
    - echo "This step is needed as the artifacts can't be passed in the same stage"
    - make join-lint-reports
  artifacts:
    paths:
      - build/
    when: always

# Standardised included jobs
variables:
  GIT_SUBMODULE_STRATEGY: recursive

# Include CI templates
include:
# OCI Images
  # do a custom set of build and publish stages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

  # Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

# Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'

# .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# k8s steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

# changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

# Not ready for this. There's no image with tango and kubectl
# ST-1131: Run on STFC and deploy on STFC
k8s-test:
  allow_failure: true
  stage: test-stfc-stfc
  tags:
    - k8srunner-agent
  variables:
    PYTHONPATH: "./src"
    SKA_AGENT_URL: "ska-telescope/ska-cicd-gitlab-k8s-agents-config"
    SKA_AGENT_NAME: "stfc-agent"
    KUBE_NAMESPACE: ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
  before_script:
    - '[ -f .make/k8s.mk ] || (echo "File k8s.mk not included in Makefile; exit 1")'
    - 'make help | grep k8s-test'
    - make k8s-install-chart
    - make k8s-wait
  script:
    - make k8s-test || true
  after_script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - kubectl config use-context ${SKA_AGENT_URL}:${SKA_AGENT_NAME}
    - kubectl config set-context --current --namespace=${KUBE_NAMESPACE}
    - make k8s-uninstall-chart
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    - make k8s-delete-namespace

# ST-1131: Run on STFC and deploy on Engage
k8s-test-agent-stfc-engage:
  extends: k8s-test
  stage: test-stfc-engage
  tags:
    - k8srunner-agent
  variables:
    SKA_AGENT_NAME: "engage-agent"

# ST-1131: Run on Engage and deploy on STFC
k8s-test-agent-engage-stfc:
  extends: k8s-test
  stage: test-engage-stfc
  tags:
    - k8srunner-engage
  variables:
    SKA_AGENT_NAME: "stfc-agent"

# ST-1131: Run on Engage and deploy on Engage
k8s-test-agent-engage-engage:
  extends: k8s-test
  stage: test-engage-engage
  tags:
    - k8srunner-engage
  variables:
    SKA_AGENT_NAME: "engage-agent"